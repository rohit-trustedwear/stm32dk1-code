/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef THERMOSTATVIEWBASE_HPP
#define THERMOSTATVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/thermostat_screen/ThermostatPresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/Image.hpp>
#include <touchgfx/widgets/TextureMapper.hpp>
#include <touchgfx/widgets/Button.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>
#include <touchgfx/widgets/TextArea.hpp>
#include <touchgfx/containers/buttons/Buttons.hpp>

class ThermostatViewBase : public touchgfx::View<ThermostatPresenter>
{
public:
    ThermostatViewBase();
    virtual ~ThermostatViewBase();
    virtual void setupScreen();

    /*
     * Custom Actions
     */
    virtual void goToMain()
    {
        // Override and implement this function in Screen1
    }
    

    /*
     * Virtual Action Handlers
     */
    virtual void selectCelsius()
    {
        // Override and implement this function in Thermostat
    }
    virtual void selectFahrenheit()
    {
        // Override and implement this function in Thermostat
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::Box background;
    touchgfx::Image gradient;
    touchgfx::TextureMapper handle;
    touchgfx::TextureMapper fanMotionBlur;
    touchgfx::TextureMapper fan;
    touchgfx::Image foreground;
    touchgfx::Button buttonFahrenheit;
    touchgfx::Button buttonCelsius;
    touchgfx::TextAreaWithOneWildcard temperatureCurrent;
    touchgfx::TextArea temperatureCurrentDot;
    touchgfx::TextAreaWithOneWildcard temperatureCurrentFractional;
    touchgfx::TextAreaWithOneWildcard temperatureNominal;
    touchgfx::IconButtonStyle< touchgfx::ClickButtonTrigger >  backButton;

    /*
     * Wildcard Buffers
     */
    static const uint16_t TEMPERATURECURRENT_SIZE = 3;
    touchgfx::Unicode::UnicodeChar temperatureCurrentBuffer[TEMPERATURECURRENT_SIZE];
    static const uint16_t TEMPERATURECURRENTFRACTIONAL_SIZE = 2;
    touchgfx::Unicode::UnicodeChar temperatureCurrentFractionalBuffer[TEMPERATURECURRENTFRACTIONAL_SIZE];
    static const uint16_t TEMPERATURENOMINAL_SIZE = 5;
    touchgfx::Unicode::UnicodeChar temperatureNominalBuffer[TEMPERATURENOMINAL_SIZE];

private:

    /*
     * Callback Declarations
     */
    touchgfx::Callback<ThermostatViewBase, const touchgfx::AbstractButton&> buttonCallback;
    touchgfx::Callback<ThermostatViewBase, const touchgfx::AbstractButtonContainer&> flexButtonCallback;

    /*
     * Callback Handler Declarations
     */
    void buttonCallbackHandler(const touchgfx::AbstractButton& src);
    void flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src);

};

#endif // THERMOSTATVIEWBASE_HPP
