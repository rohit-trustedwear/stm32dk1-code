/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef MAINVIEWBASE_HPP
#define MAINVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/main_screen/MainPresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/Image.hpp>
#include <gui/containers/MainWheel.hpp>
#include <touchgfx/containers/buttons/Buttons.hpp>

class MainViewBase : public touchgfx::View<MainPresenter>
{
public:
    MainViewBase();
    virtual ~MainViewBase();
    virtual void setupScreen();
    virtual void afterTransition();

    /*
     * Custom Actions
     */
    virtual void startFlowerAnimation()
    {
        // Override and implement this function in Screen1
    }
    
    virtual void changeScreen(uint8_t value)
    {
        // Override and implement this function in Screen1
    }
    
    virtual void goToWatch();
    virtual void goToCompass();
    virtual void goToThermostat();
    virtual void goToDashboard();
    virtual void goToSvg();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::Image background;
    MainWheel wheel;
    touchgfx::Image frame;
    touchgfx::IconButtonStyle< touchgfx::ClickButtonTrigger >  backButton;

private:

    /*
     * Callback Declarations
     */
    touchgfx::Callback<MainViewBase, uint8_t> wheelChangeScreenCallback;
    touchgfx::Callback<MainViewBase, const touchgfx::AbstractButtonContainer&> flexButtonCallback;

    /*
     * Callback Handler Declarations
     */
    void wheelChangeScreenCallbackHandler(uint8_t value);
    void flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src);

};

#endif // MAINVIEWBASE_HPP
