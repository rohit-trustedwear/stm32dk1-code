/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef COMPASSVIEWBASE_HPP
#define COMPASSVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/compass_screen/CompassPresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/Image.hpp>
#include <touchgfx/widgets/TextureMapper.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>
#include <touchgfx/containers/buttons/Buttons.hpp>

class CompassViewBase : public touchgfx::View<CompassPresenter>
{
public:
    CompassViewBase();
    virtual ~CompassViewBase();
    virtual void setupScreen();

    /*
     * Custom Actions
     */
    virtual void goToMain()
    {
        // Override and implement this function in Screen1
    }
    

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::Image background;
    touchgfx::TextureMapper wheel;
    touchgfx::TextAreaWithOneWildcard angleVerbose;
    touchgfx::TextAreaWithOneWildcard angleNumeric;
    touchgfx::IconButtonStyle< touchgfx::ClickButtonTrigger >  backButton;

    /*
     * Wildcard Buffers
     */
    static const uint16_t ANGLEVERBOSE_SIZE = 3;
    touchgfx::Unicode::UnicodeChar angleVerboseBuffer[ANGLEVERBOSE_SIZE];
    static const uint16_t ANGLENUMERIC_SIZE = 4;
    touchgfx::Unicode::UnicodeChar angleNumericBuffer[ANGLENUMERIC_SIZE];

private:

    /*
     * Callback Declarations
     */
    touchgfx::Callback<CompassViewBase, const touchgfx::AbstractButtonContainer&> flexButtonCallback;

    /*
     * Callback Handler Declarations
     */
    void flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src);

};

#endif // COMPASSVIEWBASE_HPP
