/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef WATCHVIEWBASE_HPP
#define WATCHVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/watch_screen/WatchPresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/Image.hpp>
#include <touchgfx/widgets/TextureMapper.hpp>
#include <gui/containers/WatchCube.hpp>
#include <touchgfx/containers/buttons/Buttons.hpp>

class WatchViewBase : public touchgfx::View<WatchPresenter>
{
public:
    WatchViewBase();
    virtual ~WatchViewBase();
    virtual void setupScreen();
    virtual void afterTransition();

    /*
     * Custom Actions
     */
    virtual void goToMain()
    {
        // Override and implement this function in Screen1
    }
    
    virtual void startIntroAnimation()
    {
        // Override and implement this function in Screen1
    }
    

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::Image background;
    touchgfx::Image backgroundRingImage;
    touchgfx::TextureMapper backgroundRingTextureMapper;
    touchgfx::Image boxImage;
    touchgfx::TextureMapper boxTextureMapper;
    touchgfx::Image backgroundFrame;
    WatchCube cube;
    touchgfx::IconButtonStyle< touchgfx::ClickButtonTrigger >  backButton;

private:

    /*
     * Callback Declarations
     */
    touchgfx::Callback<WatchViewBase, const touchgfx::AbstractButtonContainer&> flexButtonCallback;

    /*
     * Callback Handler Declarations
     */
    void flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src);

};

#endif // WATCHVIEWBASE_HPP
