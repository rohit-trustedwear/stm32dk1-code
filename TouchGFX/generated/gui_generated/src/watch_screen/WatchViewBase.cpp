/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/watch_screen/WatchViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <images/BitmapDatabase.hpp>

WatchViewBase::WatchViewBase() :
    flexButtonCallback(this, &WatchViewBase::flexButtonCallbackHandler)
{
    __background.setPosition(0, 0, 480, 480);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    background.setXY(0, 0);
    background.setBitmap(touchgfx::Bitmap(BITMAP_WATCH_BACKGROUND_PATTERN_480_ID));
    add(background);

    backgroundRingImage.setXY(16, 16);
    backgroundRingImage.setBitmap(touchgfx::Bitmap(BITMAP_CLOCK_FRAME_ID));
    backgroundRingImage.setVisible(false);
    add(backgroundRingImage);

    backgroundRingTextureMapper.setXY(0, 0);
    backgroundRingTextureMapper.setBitmap(touchgfx::Bitmap(BITMAP_CLOCK_FRAME_ID));
    backgroundRingTextureMapper.setWidth(480);
    backgroundRingTextureMapper.setHeight(480);
    backgroundRingTextureMapper.setBitmapPosition(16.0f, 16.0f);
    backgroundRingTextureMapper.setScale(1.2f);
    backgroundRingTextureMapper.setCameraDistance(1000.0f);
    backgroundRingTextureMapper.setOrigo(240.0f, 240.0f, 1000.0f);
    backgroundRingTextureMapper.setCamera(240.0f, 240.0f);
    backgroundRingTextureMapper.setAngles(0.0f, 0.0f, 0.0f);
    backgroundRingTextureMapper.setRenderingAlgorithm(touchgfx::TextureMapper::NEAREST_NEIGHBOR);
    add(backgroundRingTextureMapper);

    boxImage.setXY(132, 132);
    boxImage.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_BOX_ID));
    boxImage.setVisible(false);
    add(boxImage);

    boxTextureMapper.setXY(132, 132);
    boxTextureMapper.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_BOX_ID));
    boxTextureMapper.setWidth(216);
    boxTextureMapper.setHeight(216);
    boxTextureMapper.setBitmapPosition(0.0f, 0.0f);
    boxTextureMapper.setScale(0.0f);
    boxTextureMapper.setCameraDistance(1000.0f);
    boxTextureMapper.setOrigo(108.0f, 108.0f, 1000.0f);
    boxTextureMapper.setCamera(108.0f, 108.0f);
    boxTextureMapper.setAngles(0.0f, 0.0f, 0.0f);
    boxTextureMapper.setRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
    add(boxTextureMapper);

    backgroundFrame.setXY(0, 0);
    backgroundFrame.setBitmap(touchgfx::Bitmap(BITMAP_PATTERN_ROUND_FRAME_480_ID));
    add(backgroundFrame);

    cube.setXY(0, 0);
    add(cube);

    backButton.setIconBitmaps(Bitmap(BITMAP_ICON_BACK_24_NORMAL_BLUE_ID), Bitmap(BITMAP_ICON_BACK_24_PRESSED_ID));
    backButton.setIconXY(92, -1);
    backButton.setAction(flexButtonCallback);
    backButton.setPosition(128, 429, 220, 51);
    add(backButton);
}

WatchViewBase::~WatchViewBase()
{

}

void WatchViewBase::setupScreen()
{
    cube.initialize();
}

void WatchViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
    if (&src == &backButton)
    {
        //ChangeScreenToMain
        //When backButton clicked change screen to Main
        //Go to Main with screen transition towards East
        application().gotoMainScreenWipeTransitionEast();
    }
}

void WatchViewBase::afterTransition()
{
    //StartIntroAnimation
    //When screen transition ends call startIntroAnimation on Watch
    //Call startIntroAnimation
    startIntroAnimation();
}
